Prova:
Desenvolver uma aplica√ß√£o em ReactJS com duas rotas principais, que consuma dados da API p√∫blica JSONPlaceholder.
https://jsonplaceholder.typicode.com/


‚úÖ Crit√©rios de Aceite:
Rotas da Aplica√ß√£o
- Commits (seguindo a Conventional Commits) -5 pontos
- Arquitetura-  5 pontos
- Funcionamento das paginas das rotas: /post e /dados. (funcionalidade) -15 pontos
- Deploy - 2 pontos
-  Layout tela - 3 pontos
Rota /post
Deve realizar uma requisi√ß√£o GET para uma API https://jsonplaceholder.typicode.com/.
Uma lista de Post deve ser exibida na interface da aplica√ß√£o, na rota POST.

Ao clicar em um Post da lista, a aplica√ß√£o deve abrir uma nova aba para a rota /dados, incluindo o identificador do post (ex: id) como par√¢metro na URL (ex: /dados/123).
Ou seja, caso click no 1 vai carregar na rota dados, os dados do primeiro, caso click no segundo os dados do segundo.....
Rota /dados/id

Deve extrair o par√¢metro da URL (id) ao carregar a rota.
Deve realizar uma nova requisi√ß√£o GET para a API para buscar os dados detalhados do post com base no id fornecido.

Os dados detalhados do usu√°rio devem ser exibidos na interface.


üõ† Tecnologias Utilizadas:
ReactJS ‚Äì para constru√ß√£o da interface da aplica√ß√£o SPA (Single Page Application).

Material UI (MUI) ‚Äì para os componentes visuais e estiliza√ß√£o¬†da¬†aplica√ß√£o.

-----------------------------------

feat: Nova funcionalidade
fix: Corre√ß√£o de bug
docs: Altera√ß√µes na documenta√ß√£o
style: Mudan√ßas visuais (espa√ßos, v√≠rgulas etc.)
refactor: Refatora√ß√£o de c√≥digo (sem mudar comportamento)
test: Adi√ß√£o ou modifica√ß√£o de testes
chore: Tarefas de manuten√ß√£o (build, deps, etc)